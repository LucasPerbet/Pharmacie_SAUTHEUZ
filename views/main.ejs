<%- include('header') %>
<script src="https://cdn.jsdelivr.net/npm/chart.js"></script>

<div class="container d-flex justify-content-center align-items-center">
    <div class="text-center mt-3">
        <h3 class="mb-3 py-3 text-success border-bottom border-2 border-success border-opacity-50 text-start">Stocks de médicaments et quantités prescrites</h3>
        <p>Si les stocks sont plus bas que les quantités prescrites, pensez à commander !</p>
        <canvas class="w-75 h-75 text-center" id="medicamentChart"></canvas>
    </div>
</div>

<script>
    const dataString = "<%= JSON.stringify(data) %>";
    console.log("Data string:", dataString);
    const data = JSON.parse(dataString.replace(/&#34;/g, '"'));
    console.log(data[0].nom_medicament);
    
    const dataString2 = "<%= JSON.stringify(prescription) %>";
    console.log("Data string:", dataString2);
    const prescription = JSON.parse(dataString2.replace(/&#34;/g, '"'));
    console.log(prescription[0].posologie);

    const labels = data.map(function (medicament) {
        return medicament.nom_medicament;
    });

    const quantities = data.map(function (medicament) {
        return medicament.qte_en_stock;
    });

    // Ajout de la posologie
    const prescriptions = prescription.map(function (medicament) {
        return medicament.posologie;
    });

    // Palette de couleurs
    var colors = [
        'rgba(255, 99, 132, 0.2)',
        'rgba(54, 162, 235, 0.2)',
        'rgba(255, 206, 86, 0.2)',
        'rgba(75, 192, 192, 0.2)',
        'rgba(153, 102, 255, 0.2)',
        'rgba(255, 159, 64, 0.2)'
        // Ajoutez autant de couleurs que nécessaire
    ];

    var colorArray = data.map(function (_, index) {
        return colors[index % colors.length];
    });

    var ctx = document.getElementById('medicamentChart').getContext('2d');
    var myChart = new Chart(ctx, {
        type: 'bar',
        data: {
            labels: labels,
            datasets: [{
                label: 'Quantité en stock',
                data: quantities,
                backgroundColor: colorArray,
                borderColor: colorArray.map(color => color.replace('0.2', '1')), // Utilisez la version pleine de l'opacité
                borderWidth: 1
            }, {
                label: 'Quantité prescrite',
                data: prescriptions,
                backgroundColor: 'rgba(255, 99, 132, 0.8)', // Couleur pour la quantité prescrite
                borderColor: 'rgba(255, 99, 132, 1)',
                borderWidth: 1
            }]
        },
        options: {
            scales: {
                y: {
                    beginAtZero: true
                }
            }
        }
    });
</script>

<%- include('footer') %>
